{
  "tables": [
    {
      "kind": "interface",
      "name": "IMessageBar",
      "extendsTokens": [],
      "descriptionHtml": "\n",
      "members": []
    },
    {
      "kind": "interface",
      "name": "IMessageBarProps",
      "extendsTokens": [
        {
          "text": "React"
        },
        {
          "text": "."
        },
        {
          "text": "HTMLAttributes"
        },
        {
          "text": "<"
        },
        {
          "text": "HTMLElement"
        },
        {
          "text": "> "
        }
      ],
      "descriptionHtml": "\n",
      "members": [
        {
          "name": "actions",
          "typeTokens": [
            {
              "text": "JSX"
            },
            {
              "text": "."
            },
            {
              "text": "Element"
            }
          ],
          "descriptionHtml": "The actions you want to show on the other side.\n",
          "deprecated": false
        },
        {
          "name": "ariaLabel",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "A description of the message bar for the benefit of screen readers.\n\n",
          "deprecated": true
        },
        {
          "name": "className",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "Additional CSS class(es) to apply to the MessageBar.\n",
          "deprecated": false
        },
        {
          "name": "componentRef",
          "typeTokens": [
            {
              "text": "IRefObject"
            },
            {
              "text": "<"
            },
            {
              "text": "IMessageBar"
            },
            {
              "text": ">"
            }
          ],
          "descriptionHtml": "Optional callback to access the IMessageBar interface. Use this instead of ref for accessing the public methods and properties of the component.\n",
          "deprecated": false
        },
        {
          "name": "dismissButtonAriaLabel",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "Aria label on dismiss button if onDismiss is defined.\n",
          "deprecated": false
        },
        {
          "name": "isMultiline",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "Determines if the message bar is multi lined. If false, and the text overflows over buttons or to another line, it is clipped.\n\n",
          "deprecated": false
        },
        {
          "name": "messageBarType",
          "typeTokens": [
            {
              "text": "MessageBarType"
            }
          ],
          "descriptionHtml": "The type of MessageBar to render.\n\n",
          "deprecated": false
        },
        {
          "name": "onDismiss",
          "typeTokens": [
            {
              "text": "("
            },
            {
              "text": "ev"
            },
            {
              "text": "?: "
            },
            {
              "text": "React"
            },
            {
              "text": "."
            },
            {
              "text": "MouseEvent"
            },
            {
              "text": "<"
            },
            {
              "text": "HTMLButtonElement"
            },
            {
              "text": " | "
            },
            {
              "text": "BaseButton"
            },
            {
              "text": " | "
            },
            {
              "text": "HTMLAnchorElement"
            },
            {
              "text": " | "
            },
            {
              "text": "HTMLDivElement"
            },
            {
              "text": " | "
            },
            {
              "text": "Button",
              "hyperlinkedPage": "Button",
              "pageKind": "Components"
            },
            {
              "text": ">) => any"
            }
          ],
          "descriptionHtml": "Whether the message bar has a dismiss button and its callback. If null, we don't show a dismiss button.\n\n",
          "deprecated": false
        },
        {
          "name": "overflowButtonAriaLabel",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "Aria label on overflow button if truncated is defined.\n",
          "deprecated": false
        },
        {
          "name": "styles",
          "typeTokens": [
            {
              "text": "IStyleFunctionOrObject"
            },
            {
              "text": "<"
            },
            {
              "text": "IMessageBarStyleProps"
            },
            {
              "text": ", "
            },
            {
              "text": "IMessageBarStyles"
            },
            {
              "text": ">"
            }
          ],
          "descriptionHtml": "Call to provide customized styling that will layer on top of the variant rules.\n",
          "deprecated": false
        },
        {
          "name": "theme",
          "typeTokens": [
            {
              "text": "ITheme",
              "hyperlinkedPage": "ITheme",
              "pageKind": "References"
            }
          ],
          "descriptionHtml": "Theme (provided through customization.)\n",
          "deprecated": false
        },
        {
          "name": "truncated",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "Determines if the message bar text is truncated. If true, a button will render to toggle between a single line view and multiline view. This prop is for single line message bars with no buttons only in a limited space scenario.\n\n",
          "deprecated": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": "IMessageBarStyleProps",
      "extendsTokens": [],
      "descriptionHtml": "\n",
      "members": [
        {
          "name": "actions",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "Whether the MessageBar contains any action elements.\n",
          "deprecated": false
        },
        {
          "name": "className",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "Additional CSS class(es).\n",
          "deprecated": false
        },
        {
          "name": "expandSingleLine",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "Whether the single line MessageBar is being expanded.\n",
          "deprecated": false
        },
        {
          "name": "isMultiline",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "Whether the MessageBar is rendered in multi line (as opposed to single line) mode.\n",
          "deprecated": false
        },
        {
          "name": "messageBarType",
          "typeTokens": [
            {
              "text": "MessageBarType"
            }
          ],
          "descriptionHtml": "Type of the MessageBar.\n",
          "deprecated": false
        },
        {
          "name": "onDismiss",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "Whether the MessageBar contains a dismiss button.\n",
          "deprecated": false
        },
        {
          "name": "theme",
          "typeTokens": [
            {
              "text": "ITheme",
              "hyperlinkedPage": "ITheme",
              "pageKind": "References"
            }
          ],
          "descriptionHtml": "Theme (provided through customization).\n",
          "deprecated": false
        },
        {
          "name": "truncated",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "Whether the text is truncated.\n",
          "deprecated": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": "IMessageBarStyles",
      "extendsTokens": [],
      "descriptionHtml": "\n",
      "members": [
        {
          "name": "actions",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style set for the optional element containing the action elements.\n",
          "deprecated": false
        },
        {
          "name": "content",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style set for the element containing the icon, text, and optional dismiss button.\n",
          "deprecated": false
        },
        {
          "name": "dismissal",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style set for the optional dismiss button.\n",
          "deprecated": false
        },
        {
          "name": "dismissSingleLine",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style set for the element containing the dismiss button.\n",
          "deprecated": false
        },
        {
          "name": "expand",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style set for the icon used to expand and collapse the MessageBar.\n",
          "deprecated": false
        },
        {
          "name": "expandSingleLine",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style set for the element containing the expand icon.\n",
          "deprecated": false
        },
        {
          "name": "icon",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style set for the icon.\n",
          "deprecated": false
        },
        {
          "name": "iconContainer",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style set for the element containing the icon.\n",
          "deprecated": false
        },
        {
          "name": "innerText",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style set for the text.\n",
          "deprecated": false
        },
        {
          "name": "root",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style set for the root element.\n",
          "deprecated": false
        },
        {
          "name": "text",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style set for the element containing the text.\n",
          "deprecated": false
        }
      ]
    },
    {
      "kind": "enum",
      "name": "MessageBarType",
      "extendsTokens": [],
      "descriptionHtml": "\n",
      "members": [
        {
          "name": "blocked",
          "descriptionHtml": "Blocked styled MessageBar\n",
          "value": "2"
        },
        {
          "name": "error",
          "descriptionHtml": "Error styled MessageBar\n",
          "value": "1"
        },
        {
          "name": "info",
          "descriptionHtml": "Info styled MessageBar\n",
          "value": "0"
        },
        {
          "name": "remove",
          "descriptionHtml": "Deprecated at v0.48.0, to be removed at \\>= v1.0.0. Use `blocked` instead.\n\n",
          "value": "90000"
        },
        {
          "name": "severeWarning",
          "descriptionHtml": "SevereWarning styled MessageBar\n",
          "value": "3"
        },
        {
          "name": "success",
          "descriptionHtml": "Success styled MessageBar\n",
          "value": "4"
        },
        {
          "name": "warning",
          "descriptionHtml": "Warning styled MessageBar\n",
          "value": "5"
        }
      ]
    }
  ]
}
