{
  "tables": [
    {
      "kind": "interface",
      "name": "ICircle",
      "extendsTokens": [
        {
          "text": "IShimmerElement",
          "hyperlinkedPage": "Shimmer"
        },
        {
          "text": " "
        }
      ],
      "descriptionHtml": "Circle element interface \n",
      "members": [
        {
          "name": "height",
          "typeTokens": [
            {
              "text": "number"
            }
          ],
          "descriptionHtml": "Sets the height of the shimmer circle in pixels. Minimum supported 10px.\n\n",
          "deprecated": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": "IGap",
      "extendsTokens": [
        {
          "text": "IShimmerElement",
          "hyperlinkedPage": "Shimmer"
        },
        {
          "text": " "
        }
      ],
      "descriptionHtml": "Gap element interface \n",
      "members": [
        {
          "name": "height",
          "typeTokens": [
            {
              "text": "number"
            }
          ],
          "descriptionHtml": "Sets the height of the shimmer gap in pixels.\n\n",
          "deprecated": false
        },
        {
          "name": "width",
          "typeTokens": [
            {
              "text": "number | string"
            }
          ],
          "descriptionHtml": "Gap width value.\n\n",
          "deprecated": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": "ILine",
      "extendsTokens": [
        {
          "text": "IShimmerElement",
          "hyperlinkedPage": "Shimmer"
        },
        {
          "text": " "
        }
      ],
      "descriptionHtml": "Line element interface \n",
      "members": [
        {
          "name": "height",
          "typeTokens": [
            {
              "text": "number"
            }
          ],
          "descriptionHtml": "Sets the height of the shimmer line in pixels.\n\n",
          "deprecated": false
        },
        {
          "name": "width",
          "typeTokens": [
            {
              "text": "number | string"
            }
          ],
          "descriptionHtml": "Line width value.\n\n",
          "deprecated": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": "IShimmer",
      "extendsTokens": [],
      "descriptionHtml": "\n",
      "members": []
    },
    {
      "kind": "interface",
      "name": "IShimmerColors",
      "extendsTokens": [],
      "descriptionHtml": "Interface describing the possible color customizations of Shimmer. \n",
      "members": [
        {
          "name": "background",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "Defines the background color of the space in between and around shimmer elements (borders, gaps and rounded corners).\n\n",
          "deprecated": false
        },
        {
          "name": "shimmer",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "Defines the main background color which is the color you see when the wave is not animating.\n\n",
          "deprecated": false
        },
        {
          "name": "shimmerWave",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "Defines the tip color of the shimmer wave which gradually gets from and to `shimmer` color.\n\n",
          "deprecated": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": "IShimmerElement",
      "extendsTokens": [],
      "descriptionHtml": "Shimmer Elements Interface representing all common properties between Gap, Circle and Line. \n",
      "members": [
        {
          "name": "height",
          "typeTokens": [
            {
              "text": "number"
            }
          ],
          "descriptionHtml": "Sets the height of the element (ICircle, ILine, IGap) in pixels. Read more details for each specific element.\n",
          "deprecated": false
        },
        {
          "name": "type",
          "typeTokens": [
            {
              "text": "ShimmerElementType",
              "hyperlinkedPage": "Shimmer"
            }
          ],
          "descriptionHtml": "Represents the possible type of the shimmer elements: Gap, Circle, Line. Required for every element you intend to use.\n",
          "deprecated": false
        },
        {
          "name": "verticalAlign",
          "typeTokens": [
            {
              "text": "'top' | 'center' | 'bottom'"
            }
          ],
          "descriptionHtml": "Sets vertical alignment of the element (ICircle, ILine).\n\n",
          "deprecated": false
        },
        {
          "name": "width",
          "typeTokens": [
            {
              "text": "number | string"
            }
          ],
          "descriptionHtml": "Sets the width value of the element (ILine, IGap) in pixels. Read more details for each specific element.\n",
          "deprecated": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": "IShimmerProps",
      "extendsTokens": [
        {
          "text": "React"
        },
        {
          "text": "."
        },
        {
          "text": "AllHTMLAttributes"
        },
        {
          "text": "<"
        },
        {
          "text": "HTMLElement"
        },
        {
          "text": "> "
        }
      ],
      "descriptionHtml": "Shimmer component props. \n",
      "members": [
        {
          "name": "ariaLabel",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "Localized string of the status label for screen reader\n",
          "deprecated": false
        },
        {
          "name": "className",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "Additional CSS class(es) to apply to the Shimmer container.\n",
          "deprecated": false
        },
        {
          "name": "componentRef",
          "typeTokens": [
            {
              "text": "IRefObject"
            },
            {
              "text": "<"
            },
            {
              "text": "IShimmer",
              "hyperlinkedPage": "Shimmer"
            },
            {
              "text": ">"
            }
          ],
          "descriptionHtml": "Optional callback to access the IShimmer interface. Use this instead of ref for accessing the public methods and properties of the component.\n",
          "deprecated": false
        },
        {
          "name": "customElementsGroup",
          "typeTokens": [
            {
              "text": "React"
            },
            {
              "text": "."
            },
            {
              "text": "ReactNode"
            }
          ],
          "descriptionHtml": "Custom elements when necessary to build complex placeholder skeletons.\n",
          "deprecated": false
        },
        {
          "name": "isDataLoaded",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "Controls when the shimmer is swapped with actual data through an animated transition.\n\n",
          "deprecated": false
        },
        {
          "name": "shimmerColors",
          "typeTokens": [
            {
              "text": "IShimmerColors",
              "hyperlinkedPage": "Shimmer"
            }
          ],
          "descriptionHtml": "Defines an object with possible colors to pass for Shimmer customization used on different backgrounds.\n",
          "deprecated": false
        },
        {
          "name": "shimmerElements",
          "typeTokens": [
            {
              "text": "IShimmerElement",
              "hyperlinkedPage": "Shimmer"
            },
            {
              "text": "[]"
            }
          ],
          "descriptionHtml": "Elements to render in one line of the Shimmer.\n",
          "deprecated": false
        },
        {
          "name": "styles",
          "typeTokens": [
            {
              "text": "IStyleFunctionOrObject"
            },
            {
              "text": "<"
            },
            {
              "text": "IShimmerStyleProps",
              "hyperlinkedPage": "Shimmer"
            },
            {
              "text": ", "
            },
            {
              "text": "IShimmerStyles",
              "hyperlinkedPage": "Shimmer"
            },
            {
              "text": ">"
            }
          ],
          "descriptionHtml": "Call to provide customized styling that will layer on top of the variant rules.\n",
          "deprecated": false
        },
        {
          "name": "theme",
          "typeTokens": [
            {
              "text": "ITheme"
            }
          ],
          "descriptionHtml": "Theme provided by High-Order Component.\n",
          "deprecated": false
        },
        {
          "name": "width",
          "typeTokens": [
            {
              "text": "number | string"
            }
          ],
          "descriptionHtml": "Sets the width value of the shimmer wave wrapper.\n\n",
          "deprecated": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": "IShimmerStyleProps",
      "extendsTokens": [],
      "descriptionHtml": "Defines props needed to construct styles. This represents the simplified set of immutable things which control the class names. \n",
      "members": [
        {
          "name": "className",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "Optional CSS class name for the component attached to the root stylable area.\n",
          "deprecated": false
        },
        {
          "name": "isDataLoaded",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "Boolean flag to trigger fadeIn/fadeOut transition animation when content is loaded.\n",
          "deprecated": false
        },
        {
          "name": "shimmerColor",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "Color to be used as the main background color of Shimmer when not animating.\n",
          "deprecated": false
        },
        {
          "name": "shimmerWaveColor",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "Tip color of the shimmer wave which gradually gets from and to `shimmerColor`.\n",
          "deprecated": false
        },
        {
          "name": "theme",
          "typeTokens": [
            {
              "text": "ITheme"
            }
          ],
          "descriptionHtml": "Theme provided by High-Order Component.\n",
          "deprecated": false
        },
        {
          "name": "transitionAnimationInterval",
          "typeTokens": [
            {
              "text": "number"
            }
          ],
          "descriptionHtml": "Interval in milliseconds for the adeIn/fadeOut transition animation.\n",
          "deprecated": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": "IShimmerStyles",
      "extendsTokens": [],
      "descriptionHtml": "Represents the stylable areas of the control. \n",
      "members": [
        {
          "name": "dataWrapper",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Refers to wrapper element of the children only.\n",
          "deprecated": false
        },
        {
          "name": "root",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Refers to the root wrapper element.\n",
          "deprecated": false
        },
        {
          "name": "screenReaderText",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Styles for the hidden helper element to aid with screen readers.\n",
          "deprecated": false
        },
        {
          "name": "shimmerWrapper",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Refers to wrapper element of the shimmer animation only.\n",
          "deprecated": false
        }
      ]
    },
    {
      "kind": "enum",
      "name": "ShimmerElementsDefaultHeights",
      "extendsTokens": [],
      "descriptionHtml": "Describes the default heights for shimmer elements when omitted in implementation. \n",
      "members": [
        {
          "name": "circle",
          "descriptionHtml": "Default height of the circle element when not provided by user: 24px\n",
          "value": "24"
        },
        {
          "name": "gap",
          "descriptionHtml": "Default height of the gap element when not provided by user: 16px\n",
          "value": "16"
        },
        {
          "name": "line",
          "descriptionHtml": "Default height of the line element when not provided by user: 16px\n",
          "value": "16"
        }
      ]
    },
    {
      "kind": "enum",
      "name": "ShimmerElementType",
      "extendsTokens": [],
      "descriptionHtml": "Describes the possible types for shimmer elements used. \n",
      "members": [
        {
          "name": "circle",
          "descriptionHtml": "Circle element type\n",
          "value": "2"
        },
        {
          "name": "gap",
          "descriptionHtml": "Gap element type\n",
          "value": "3"
        },
        {
          "name": "line",
          "descriptionHtml": "Line element type\n",
          "value": "1"
        }
      ]
    }
  ]
}
