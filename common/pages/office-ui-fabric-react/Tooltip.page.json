{
  "tables": [
    {
      "kind": "interface",
      "name": "ITooltip",
      "extendsTokens": [],
      "descriptionHtml": "\n",
      "members": []
    },
    {
      "kind": "interface",
      "name": "ITooltipProps",
      "extendsTokens": [
        {
          "text": "React"
        },
        {
          "text": "."
        },
        {
          "text": "HTMLAttributes"
        },
        {
          "text": "<"
        },
        {
          "text": "HTMLDivElement"
        },
        {
          "text": " | "
        },
        {
          "text": "TooltipBase"
        },
        {
          "text": "> "
        }
      ],
      "descriptionHtml": "Tooltip component props. \n",
      "members": [
        {
          "name": "calloutProps",
          "typeTokens": [
            {
              "text": "ICalloutProps"
            }
          ],
          "descriptionHtml": "Properties to pass through for Callout, reference detail properties in ICalloutProps\n\n",
          "deprecated": false
        },
        {
          "name": "componentRef",
          "typeTokens": [
            {
              "text": "IRefObject"
            },
            {
              "text": "<"
            },
            {
              "text": "ITooltip"
            },
            {
              "text": ">"
            }
          ],
          "descriptionHtml": "Optional callback to access the ITooltip interface. Use this instead of ref for accessing the public methods and properties of the component.\n",
          "deprecated": false
        },
        {
          "name": "content",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "String to be passed to the tooltip\n",
          "deprecated": false
        },
        {
          "name": "delay",
          "typeTokens": [
            {
              "text": "TooltipDelay"
            }
          ],
          "descriptionHtml": "Length of delay. Can be set to zero if you do not want a delay.\n\n",
          "deprecated": false
        },
        {
          "name": "directionalHint",
          "typeTokens": [
            {
              "text": "DirectionalHint"
            }
          ],
          "descriptionHtml": "Indicator of how the tooltip should be anchored to its targetElement.\n\n",
          "deprecated": false
        },
        {
          "name": "directionalHintForRTL",
          "typeTokens": [
            {
              "text": "DirectionalHint"
            }
          ],
          "descriptionHtml": "How the element should be positioned in RTL layouts. If not specified, a mirror of `directionalHint` will be used instead\n",
          "deprecated": false
        },
        {
          "name": "maxWidth",
          "typeTokens": [
            {
              "text": "string | null"
            }
          ],
          "descriptionHtml": "Max width of tooltip\n\n",
          "deprecated": false
        },
        {
          "name": "onRenderContent",
          "typeTokens": [
            {
              "text": "IRenderFunction",
              "hyperlinkedPage": "IRenderFunction",
              "pageKind": "References"
            },
            {
              "text": "<"
            },
            {
              "text": "ITooltipProps"
            },
            {
              "text": ">"
            }
          ],
          "descriptionHtml": "Render function to populate content area\n",
          "deprecated": false
        },
        {
          "name": "styles",
          "typeTokens": [
            {
              "text": "IStyleFunctionOrObject"
            },
            {
              "text": "<"
            },
            {
              "text": "ITooltipStyleProps"
            },
            {
              "text": ", "
            },
            {
              "text": "ITooltipStyles"
            },
            {
              "text": ">"
            }
          ],
          "descriptionHtml": "Call to provide customized styling that will layer on top of the variant rules.\n",
          "deprecated": false
        },
        {
          "name": "targetElement",
          "typeTokens": [
            {
              "text": "HTMLElement"
            }
          ],
          "descriptionHtml": "Element to anchor the Tooltip to.\n",
          "deprecated": false
        },
        {
          "name": "theme",
          "typeTokens": [
            {
              "text": "ITheme",
              "hyperlinkedPage": "ITheme",
              "pageKind": "References"
            }
          ],
          "descriptionHtml": "Theme to apply to the component.\n",
          "deprecated": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": "ITooltipStyleProps",
      "extendsTokens": [],
      "descriptionHtml": "\n",
      "members": [
        {
          "name": "className",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "Accept custom classNames\n",
          "deprecated": false
        },
        {
          "name": "delay",
          "typeTokens": [
            {
              "text": "TooltipDelay"
            }
          ],
          "descriptionHtml": "Delay before tooltip appears.\n",
          "deprecated": false
        },
        {
          "name": "maxWidth",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "Maximum width of tooltip.\n",
          "deprecated": false
        },
        {
          "name": "theme",
          "typeTokens": [
            {
              "text": "ITheme",
              "hyperlinkedPage": "ITheme",
              "pageKind": "References"
            }
          ],
          "descriptionHtml": "Accept theme prop.\n",
          "deprecated": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": "ITooltipStyles",
      "extendsTokens": [],
      "descriptionHtml": "\n",
      "members": [
        {
          "name": "content",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style for the content element.\n",
          "deprecated": false
        },
        {
          "name": "root",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style for the root element.\n",
          "deprecated": false
        },
        {
          "name": "subText",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style for the subtext element.\n",
          "deprecated": false
        }
      ]
    },
    {
      "kind": "enum",
      "name": "TooltipDelay",
      "extendsTokens": [],
      "descriptionHtml": "\n",
      "members": [
        {
          "name": "long",
          "descriptionHtml": "",
          "value": "2"
        },
        {
          "name": "medium",
          "descriptionHtml": "",
          "value": "1"
        },
        {
          "name": "zero",
          "descriptionHtml": "",
          "value": "0"
        }
      ]
    }
  ]
}
