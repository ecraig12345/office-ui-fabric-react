{
  "tables": [
    {
      "kind": "interface",
      "name": "IStackItemProps",
      "extendsTokens": [
        {
          "text": "IStackItemSlots",
          "hyperlinkedPage": "Stack",
          "pageKind": "Components"
        },
        {
          "text": ", "
        },
        {
          "text": "IStyleableComponentProps"
        },
        {
          "text": "<"
        },
        {
          "text": "IStackItemProps",
          "hyperlinkedPage": "Stack",
          "pageKind": "Components"
        },
        {
          "text": ", "
        },
        {
          "text": "IStackItemTokens",
          "hyperlinkedPage": "Stack",
          "pageKind": "Components"
        },
        {
          "text": ", "
        },
        {
          "text": "IStackItemStyles"
        },
        {
          "text": "> "
        }
      ],
      "descriptionHtml": "\n",
      "members": [
        {
          "name": "align",
          "typeTokens": [
            {
              "text": "'auto' | 'stretch' | 'baseline' | 'start' | 'center' | 'end'"
            }
          ],
          "descriptionHtml": "Defines how to align the StackItem along the x-axis (for vertical Stacks) or the y-axis (for horizontal Stacks).\n",
          "deprecated": false
        },
        {
          "name": "className",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "Defines a CSS class name used to style the StackItem.\n",
          "deprecated": false
        },
        {
          "name": "disableShrink",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "Defines whether the StackItem should be prevented from shrinking. This can be used to prevent a StackItem from shrinking when it is inside of a Stack that has shrinking items.\n\n",
          "deprecated": false
        },
        {
          "name": "grow",
          "typeTokens": [
            {
              "text": "boolean | number | 'inherit' | 'initial' | 'unset'"
            }
          ],
          "descriptionHtml": "Defines how much to grow the StackItem in proportion to its siblings.\n",
          "deprecated": false
        },
        {
          "name": "shrink",
          "typeTokens": [
            {
              "text": "boolean | number | 'inherit' | 'initial' | 'unset'"
            }
          ],
          "descriptionHtml": "Defines at what ratio should the StackItem shrink to fit the available space.\n",
          "deprecated": false
        },
        {
          "name": "verticalFill",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "Defines whether the StackItem should take up 100% of the height of its parent.\n\n",
          "deprecated": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": "IStackItemSlots",
      "extendsTokens": [],
      "descriptionHtml": "\n",
      "members": [
        {
          "name": "root",
          "typeTokens": [
            {
              "text": "IHTMLSlot"
            }
          ],
          "descriptionHtml": "",
          "deprecated": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": "IStackItemTokens",
      "extendsTokens": [],
      "descriptionHtml": "\n",
      "members": []
    },
    {
      "kind": "interface",
      "name": "IStackProps",
      "extendsTokens": [
        {
          "text": "IStackSlots",
          "hyperlinkedPage": "Stack",
          "pageKind": "Components"
        },
        {
          "text": ", "
        },
        {
          "text": "IStyleableComponentProps"
        },
        {
          "text": "<"
        },
        {
          "text": "IStackProps",
          "hyperlinkedPage": "Stack",
          "pageKind": "Components"
        },
        {
          "text": ", "
        },
        {
          "text": "IStackStyles"
        },
        {
          "text": ", "
        },
        {
          "text": "IStackTokens",
          "hyperlinkedPage": "Stack",
          "pageKind": "Components"
        },
        {
          "text": ">"
        },
        {
          "text": ", "
        },
        {
          "text": "React"
        },
        {
          "text": "."
        },
        {
          "text": "HTMLAttributes"
        },
        {
          "text": "<"
        },
        {
          "text": "HTMLElement"
        },
        {
          "text": "> "
        }
      ],
      "descriptionHtml": "\n",
      "members": [
        {
          "name": "as",
          "typeTokens": [
            {
              "text": "React"
            },
            {
              "text": "."
            },
            {
              "text": "ReactType"
            },
            {
              "text": "<"
            },
            {
              "text": "React"
            },
            {
              "text": "."
            },
            {
              "text": "HTMLAttributes"
            },
            {
              "text": "<"
            },
            {
              "text": "HTMLElement"
            },
            {
              "text": ">>"
            }
          ],
          "descriptionHtml": "Defines how to render the Stack.\n",
          "deprecated": false
        },
        {
          "name": "disableShrink",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "Defines whether Stack children should not shrink to fit the available space.\n\n",
          "deprecated": false
        },
        {
          "name": "gap",
          "typeTokens": [
            {
              "text": "number | string"
            }
          ],
          "descriptionHtml": "Defines the spacing between Stack children. The property is specified as a value for 'row gap', followed optionally by a value for 'column gap'. If 'column gap' is omitted, it's set to the same value as 'row gap'.\n",
          "deprecated": false
        },
        {
          "name": "grow",
          "typeTokens": [
            {
              "text": "boolean | number | 'inherit' | 'initial' | 'unset'"
            }
          ],
          "descriptionHtml": "Defines how much to grow the Stack in proportion to its siblings.\n",
          "deprecated": false
        },
        {
          "name": "horizontal",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "Defines whether to render Stack children horizontally.\n\n",
          "deprecated": false
        },
        {
          "name": "horizontalAlign",
          "typeTokens": [
            {
              "text": "Alignment"
            }
          ],
          "descriptionHtml": "Defines how to align Stack children horizontally (along the x-axis).\n",
          "deprecated": false
        },
        {
          "name": "maxHeight",
          "typeTokens": [
            {
              "text": "number | string"
            }
          ],
          "descriptionHtml": "Defines the maximum height that the Stack can take.\n",
          "deprecated": false
        },
        {
          "name": "maxWidth",
          "typeTokens": [
            {
              "text": "number | string"
            }
          ],
          "descriptionHtml": "Defines the maximum width that the Stack can take.\n",
          "deprecated": false
        },
        {
          "name": "padding",
          "typeTokens": [
            {
              "text": "number | string"
            }
          ],
          "descriptionHtml": "Defines the inner padding of the Stack.\n",
          "deprecated": false
        },
        {
          "name": "reversed",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "Defines whether to render Stack children in the opposite direction (bottom-to-top if it's a vertical Stack and right-to-left if it's a horizontal Stack).\n\n",
          "deprecated": false
        },
        {
          "name": "verticalAlign",
          "typeTokens": [
            {
              "text": "Alignment"
            }
          ],
          "descriptionHtml": "Defines how to align Stack children vertically (along the y-axis).\n",
          "deprecated": false
        },
        {
          "name": "verticalFill",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "Defines whether the Stack should take up 100% of the height of its parent. This property is required to be set to true when using the `grow` flag on children in vertical oriented Stacks. Stacks are rendered as block elements and grow horizontally to the container already.\n\n",
          "deprecated": false
        },
        {
          "name": "wrap",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "Defines whether Stack children should wrap onto multiple rows or columns when they are about to overflow the size of the Stack.\n\n",
          "deprecated": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": "IStackSlots",
      "extendsTokens": [],
      "descriptionHtml": "\n",
      "members": [
        {
          "name": "inner",
          "typeTokens": [
            {
              "text": "IHTMLSlot"
            }
          ],
          "descriptionHtml": "Defines a slot that is placed inside the root slot in order to achieve wrapping. Only used when the wrap property is set to true.\n",
          "deprecated": false
        },
        {
          "name": "root",
          "typeTokens": [
            {
              "text": "IHTMLSlot"
            }
          ],
          "descriptionHtml": "Defines root slot of the component.\n",
          "deprecated": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": "IStackTokens",
      "extendsTokens": [],
      "descriptionHtml": "\n",
      "members": []
    }
  ]
}
