{
  "tables": [
    {
      "kind": "interface",
      "name": "IDropdown",
      "extendsTokens": [],
      "descriptionHtml": "\n",
      "members": [
        {
          "name": "focus",
          "typeTokens": [
            {
              "text": "("
            },
            {
              "text": "shouldOpenOnFocus"
            },
            {
              "text": "?: boolean) => void"
            }
          ],
          "descriptionHtml": "",
          "deprecated": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": "IDropdownOption",
      "extendsTokens": [
        {
          "text": "ISelectableOption"
        },
        {
          "text": " "
        }
      ],
      "descriptionHtml": "\n",
      "members": [
        {
          "name": "isSelected",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "Deprecated at v.65.1, use `selected` instead.\n\n",
          "deprecated": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": "IDropdownProps",
      "extendsTokens": [
        {
          "text": "ISelectableDroppableTextProps"
        },
        {
          "text": "<"
        },
        {
          "text": "IDropdown",
          "hyperlinkedPage": "Dropdown",
          "pageKind": "Components"
        },
        {
          "text": ", "
        },
        {
          "text": "HTMLDivElement"
        },
        {
          "text": "> "
        }
      ],
      "descriptionHtml": "\n",
      "members": [
        {
          "name": "defaultSelectedKeys",
          "typeTokens": [
            {
              "text": "string[] | number[]"
            }
          ],
          "descriptionHtml": "Keys that will be initially used to set selected items. This prop is used for `multiSelect` scenarios. In other cases, `defaultSelectedKey` should be used.\n",
          "deprecated": false
        },
        {
          "name": "dropdownWidth",
          "typeTokens": [
            {
              "text": "number"
            }
          ],
          "descriptionHtml": "Custom width for dropdown. If value is 0, width of the input field is used.\n\n",
          "deprecated": false
        },
        {
          "name": "isDisabled",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "Deprecated at v0.52.0, use `disabled` instead.\n\n",
          "deprecated": true
        },
        {
          "name": "keytipProps",
          "typeTokens": [
            {
              "text": "IKeytipProps",
              "hyperlinkedPage": "Keytip",
              "pageKind": "Components"
            }
          ],
          "descriptionHtml": "Optional keytip for this dropdown\n",
          "deprecated": false
        },
        {
          "name": "multiSelect",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "Optional mode indicates if multi-choice selections is allowed. Default to false\n",
          "deprecated": false
        },
        {
          "name": "multiSelectDelimiter",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "When multiple items are selected, this still will be used to separate values in the dropdown title.\n\n",
          "deprecated": false
        },
        {
          "name": "notifyOnReselect",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "Optional preference to have onChanged still be called when an already selected item is clicked in single select mode. Default to false\n",
          "deprecated": false
        },
        {
          "name": "onChange",
          "typeTokens": [
            {
              "text": "("
            },
            {
              "text": "event"
            },
            {
              "text": ": "
            },
            {
              "text": "React"
            },
            {
              "text": "."
            },
            {
              "text": "FormEvent"
            },
            {
              "text": "<"
            },
            {
              "text": "HTMLDivElement"
            },
            {
              "text": ">, "
            },
            {
              "text": "option"
            },
            {
              "text": "?: "
            },
            {
              "text": "IDropdownOption",
              "hyperlinkedPage": "Dropdown",
              "pageKind": "Components"
            },
            {
              "text": ", "
            },
            {
              "text": "index"
            },
            {
              "text": "?: number) => void"
            }
          ],
          "descriptionHtml": "Callback issued when the selected option changes.\n",
          "deprecated": false
        },
        {
          "name": "onChanged",
          "typeTokens": [
            {
              "text": "("
            },
            {
              "text": "option"
            },
            {
              "text": ": "
            },
            {
              "text": "IDropdownOption",
              "hyperlinkedPage": "Dropdown",
              "pageKind": "Components"
            },
            {
              "text": ", "
            },
            {
              "text": "index"
            },
            {
              "text": "?: number) => void"
            }
          ],
          "descriptionHtml": "",
          "deprecated": true
        },
        {
          "name": "onDismiss",
          "typeTokens": [
            {
              "text": "() => void"
            }
          ],
          "descriptionHtml": "Callback issues when the options callout is dismissed\n",
          "deprecated": false
        },
        {
          "name": "onRenderCaretDown",
          "typeTokens": [
            {
              "text": "IRenderFunction"
            },
            {
              "text": "<"
            },
            {
              "text": "IDropdownProps",
              "hyperlinkedPage": "Dropdown",
              "pageKind": "Components"
            },
            {
              "text": ">"
            }
          ],
          "descriptionHtml": "Optional custom renderer for chevron icon\n",
          "deprecated": false
        },
        {
          "name": "onRenderPlaceHolder",
          "typeTokens": [
            {
              "text": "IRenderFunction"
            },
            {
              "text": "<"
            },
            {
              "text": "IDropdownProps",
              "hyperlinkedPage": "Dropdown",
              "pageKind": "Components"
            },
            {
              "text": ">"
            }
          ],
          "descriptionHtml": "Optional custom renderer for placeholder text\n",
          "deprecated": false
        },
        {
          "name": "onRenderTitle",
          "typeTokens": [
            {
              "text": "IRenderFunction"
            },
            {
              "text": "<"
            },
            {
              "text": "IDropdownOption",
              "hyperlinkedPage": "Dropdown",
              "pageKind": "Components"
            },
            {
              "text": "[]>"
            }
          ],
          "descriptionHtml": "Optional custom renderer for selected option displayed in input\n",
          "deprecated": false
        },
        {
          "name": "options",
          "typeTokens": [
            {
              "text": "IDropdownOption",
              "hyperlinkedPage": "Dropdown",
              "pageKind": "Components"
            },
            {
              "text": "[]"
            }
          ],
          "descriptionHtml": "Options for the dropdown. If using `defaultSelectedKey` or `defaultSelectedKeys`, options must be pure for correct behavior.\n",
          "deprecated": false
        },
        {
          "name": "placeHolder",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "Input placeholder text. Displayed until option is selected.\n\n",
          "deprecated": true
        },
        {
          "name": "responsiveMode",
          "typeTokens": [
            {
              "text": "ResponsiveMode"
            }
          ],
          "descriptionHtml": "Pass in ResponsiveMode to manually overwrite the way the Dropdown renders. ResponsiveMode.Large would, for instance, disable the behavior where Dropdown options get rendered into a Panel while ResponsiveMode.Small would result in the Dropdown options always getting rendered in a Panel.\n",
          "deprecated": false
        },
        {
          "name": "selectedKeys",
          "typeTokens": [
            {
              "text": "string[] | number[] | null"
            }
          ],
          "descriptionHtml": "Keys of the selected items. If you provide this, you must maintain selection state by observing onChange events and passing a new value in when changed. Passing null in will clear the selection.\n",
          "deprecated": false
        },
        {
          "name": "styles",
          "typeTokens": [
            {
              "text": "IStyleFunctionOrObject"
            },
            {
              "text": "<"
            },
            {
              "text": "IDropdownStyleProps"
            },
            {
              "text": ", "
            },
            {
              "text": "IDropdownStyles",
              "hyperlinkedPage": "Dropdown",
              "pageKind": "Components"
            },
            {
              "text": ">"
            }
          ],
          "descriptionHtml": "Call to provide customized styling that will layer on top of the variant rules.\n",
          "deprecated": false
        },
        {
          "name": "theme",
          "typeTokens": [
            {
              "text": "ITheme",
              "hyperlinkedPage": "ITheme",
              "pageKind": "References"
            }
          ],
          "descriptionHtml": "Theme provided by higher order component.\n",
          "deprecated": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": "IDropdownStyles",
      "extendsTokens": [],
      "descriptionHtml": "Represents the stylable areas of the control. \n",
      "members": [
        {
          "name": "callout",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Refers to the callout that hosts Dropdown options in larger viewports.\n",
          "deprecated": false
        },
        {
          "name": "caretDown",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Refers to the downward pointing caret icon users click on to expand the Dropdown.\n",
          "deprecated": false
        },
        {
          "name": "caretDownWrapper",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Refers to the wrapping container around the downward pointing caret users click on to expand the Dropdown.\n",
          "deprecated": false
        },
        {
          "name": "dropdown",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Refers to the actual Dropdown element.\n",
          "deprecated": false
        },
        {
          "name": "dropdownDivider",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Refers to the dropdown separator.\n",
          "deprecated": false
        },
        {
          "name": "dropdownItem",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Refers to the individual dropdown item.\n",
          "deprecated": false
        },
        {
          "name": "dropdownItemDisabled",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style for a dropdown item when it is disabled.\n",
          "deprecated": false
        },
        {
          "name": "dropdownItemHeader",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Refers to the individual dropdown items that are being rendered as a header.\n",
          "deprecated": false
        },
        {
          "name": "dropdownItems",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Refers to the FocusZone wrapping the individual dropdown items.\n",
          "deprecated": false
        },
        {
          "name": "dropdownItemSelected",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style for a dropdown item when it is being selected.\n",
          "deprecated": false
        },
        {
          "name": "dropdownItemSelectedAndDisabled",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style for a dropdown item when it is both selected and disabled.\n",
          "deprecated": false
        },
        {
          "name": "dropdownItemsWrapper",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Refers to the element that wraps `dropdownItems`.\n",
          "deprecated": false
        },
        {
          "name": "dropdownOptionText",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Refers to the text element that renders the actual dropdown item/option text. This would be wrapped by the element referred to by `dropdownItem`.\n",
          "deprecated": false
        },
        {
          "name": "errorMessage",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Refers to the error message being rendered under the Dropdown (if any).\n",
          "deprecated": false
        },
        {
          "name": "label",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Refers to the label associated with the dropdown. This is enclosed by the root.\n",
          "deprecated": false
        },
        {
          "name": "panel",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Refers to the panel that hosts the Dropdown options in small viewports. Note: This will be deprecated when Panel supports JS Styling.\n",
          "deprecated": false
        },
        {
          "name": "root",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Root element of the Dropdown (includes Label and the actual Dropdown).\n",
          "deprecated": false
        },
        {
          "name": "subComponentStyles",
          "typeTokens": [
            {
              "text": "IDropdownSubComponentStyles",
              "hyperlinkedPage": "Dropdown",
              "pageKind": "Components"
            }
          ],
          "descriptionHtml": "Subcomponent styles.\n",
          "deprecated": false
        },
        {
          "name": "title",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Refers to the primary title of the Dropdown (rendering the selected options/placeholder/etc.).\n",
          "deprecated": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": "IDropdownSubComponentStyles",
      "extendsTokens": [],
      "descriptionHtml": "\n",
      "members": [
        {
          "name": "label",
          "typeTokens": [
            {
              "text": "IStyleFunctionOrObject"
            },
            {
              "text": "<"
            },
            {
              "text": "ILabelStyleProps",
              "hyperlinkedPage": "Label",
              "pageKind": "Components"
            },
            {
              "text": ", any>"
            }
          ],
          "descriptionHtml": "Refers to the primary label for the Dropdown.\n",
          "deprecated": false
        },
        {
          "name": "panel",
          "typeTokens": [
            {
              "text": "IStyleFunctionOrObject"
            },
            {
              "text": "<"
            },
            {
              "text": "IPanelStyleProps",
              "hyperlinkedPage": "Panel",
              "pageKind": "Components"
            },
            {
              "text": ", any>"
            }
          ],
          "descriptionHtml": "Refers to the panel that hosts the Dropdown options in small viewports.\n",
          "deprecated": false
        }
      ]
    }
  ]
}
