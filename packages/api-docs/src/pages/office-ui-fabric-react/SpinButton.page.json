{
  "tables": [
    {
      "kind": "interface",
      "name": "ISpinButton",
      "extendsTokens": [],
      "descriptionHtml": "\n",
      "members": [
        {
          "name": "focus",
          "typeTokens": [
            {
              "text": "() => void"
            }
          ],
          "descriptionHtml": "Sets focus to the spin button.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "value",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "The value of the SpinButton. Use this if you intend to pass in a new value as a result of onChange events. This value is mutually exclusive to defaultValue. Use one or the other.\n",
          "deprecated": false,
          "defaultValue": ""
        }
      ]
    },
    {
      "kind": "interface",
      "name": "ISpinButtonProps",
      "extendsTokens": [],
      "descriptionHtml": "\n",
      "members": [
        {
          "name": "ariaDescribedBy",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "Optional prop to add a string id that can be referenced inside the aria-describedby attribute\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "ariaLabel",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "A description of the SpinButton for the benefit of screen readers.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "ariaPositionInSet",
          "typeTokens": [
            {
              "text": "number"
            }
          ],
          "descriptionHtml": "The position in the parent set (if in a set) for aria-posinset.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "ariaSetSize",
          "typeTokens": [
            {
              "text": "number"
            }
          ],
          "descriptionHtml": "The total size of the parent set (if in a set) for aria-setsize.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "ariaValueNow",
          "typeTokens": [
            {
              "text": "number"
            }
          ],
          "descriptionHtml": "Sets the aria-valuenow of the spin button. The component must be controlled by the creator who controls the value externally. ariaValueNow would be the numeric form of value.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "ariaValueText",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "",
          "deprecated": false
        },
        {
          "name": "className",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "Optional className for SpinButton.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "componentRef",
          "typeTokens": [
            {
              "text": "IRefObject"
            },
            {
              "text": "<"
            },
            {
              "text": "ISpinButton",
              "hyperlinkedPage": "SpinButton",
              "pageKind": "Components"
            },
            {
              "text": ">"
            }
          ],
          "descriptionHtml": "Gets the component ref.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "decrementButtonAriaLabel",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "Accessibile label text for the decrement button for the benefit of the screen reader.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "decrementButtonIcon",
          "typeTokens": [
            {
              "text": "IIconProps",
              "hyperlinkedPage": "Icon",
              "pageKind": "Components"
            }
          ],
          "descriptionHtml": "Icon for the decrement button of the spinButton\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "defaultValue",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "The initial value of the SpinButton. Use this if you intend for the SpinButton to be an uncontrolled component. This value is mutually exclusive to value. Use one or the other.\n\n",
          "deprecated": false,
          "defaultValue": "0"
        },
        {
          "name": "disabled",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "Whether or not the SpinButton is disabled.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "downArrowButtonStyles",
          "typeTokens": [
            {
              "text": "Partial"
            },
            {
              "text": "<"
            },
            {
              "text": "IButtonStyles",
              "hyperlinkedPage": "Button",
              "pageKind": "Components"
            },
            {
              "text": ">"
            }
          ],
          "descriptionHtml": "Custom styles for the downArrow button.\n\nNote: The buttons are in a checked state when arrow keys are used to incremenent/decrement the spinButton. Use rootChecked instead of rootPressed for styling when that is the case.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "getClassNames",
          "typeTokens": [
            {
              "text": "("
            },
            {
              "text": "theme"
            },
            {
              "text": ": "
            },
            {
              "text": "ITheme",
              "hyperlinkedPage": "ITheme",
              "pageKind": "References"
            },
            {
              "text": ", "
            },
            {
              "text": "disabled"
            },
            {
              "text": ": boolean, "
            },
            {
              "text": "isFocused"
            },
            {
              "text": ": boolean, "
            },
            {
              "text": "keyboardSpinDirection"
            },
            {
              "text": ": "
            },
            {
              "text": "KeyboardSpinDirection"
            },
            {
              "text": ", "
            },
            {
              "text": "labelPosition"
            },
            {
              "text": "?: "
            },
            {
              "text": "Position"
            },
            {
              "text": ", "
            },
            {
              "text": "className"
            },
            {
              "text": "?: string) => "
            },
            {
              "text": "ISpinButtonClassNames"
            }
          ],
          "descriptionHtml": "Custom function for providing the classNames for the spinbutton. Can be used to provide all styles for the component instead of applying them on top of the default styles.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "iconProps",
          "typeTokens": [
            {
              "text": "IIconProps",
              "hyperlinkedPage": "Icon",
              "pageKind": "Components"
            }
          ],
          "descriptionHtml": "Icon that goes along with the label for the whole SpinButton\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "incrementButtonAriaLabel",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "Accessibile label text for the increment button for the benefit of the screen reader.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "incrementButtonIcon",
          "typeTokens": [
            {
              "text": "IIconProps",
              "hyperlinkedPage": "Icon",
              "pageKind": "Components"
            }
          ],
          "descriptionHtml": "Icon for the increment button of the spinButton\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "keytipProps",
          "typeTokens": [
            {
              "text": "IKeytipProps",
              "hyperlinkedPage": "Keytip",
              "pageKind": "Components"
            }
          ],
          "descriptionHtml": "Optional keytip for this spin button\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "label",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "Descriptive label for the SpinButton.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "labelPosition",
          "typeTokens": [
            {
              "text": "Position"
            }
          ],
          "descriptionHtml": "",
          "deprecated": false,
          "defaultValue": "Left"
        },
        {
          "name": "max",
          "typeTokens": [
            {
              "text": "number"
            }
          ],
          "descriptionHtml": "The max value of the SpinButton.\n\n",
          "deprecated": false,
          "defaultValue": "10"
        },
        {
          "name": "min",
          "typeTokens": [
            {
              "text": "number"
            }
          ],
          "descriptionHtml": "The min value of the SpinButton.\n\n",
          "deprecated": false,
          "defaultValue": "0"
        },
        {
          "name": "onBlur",
          "typeTokens": [
            {
              "text": "React"
            },
            {
              "text": "."
            },
            {
              "text": "FocusEventHandler"
            },
            {
              "text": "<"
            },
            {
              "text": "HTMLInputElement"
            },
            {
              "text": ">"
            }
          ],
          "descriptionHtml": "A callback for when the user moves the focus away from the picker\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "onDecrement",
          "typeTokens": [
            {
              "text": "("
            },
            {
              "text": "value"
            },
            {
              "text": ": string) => string | void"
            }
          ],
          "descriptionHtml": "This callback is triggered when the decrement button is pressed or if the user presses down arrow with focus on the input of the spinButton\n\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "onFocus",
          "typeTokens": [
            {
              "text": "React"
            },
            {
              "text": "."
            },
            {
              "text": "FocusEventHandler"
            },
            {
              "text": "<"
            },
            {
              "text": "HTMLInputElement"
            },
            {
              "text": ">"
            }
          ],
          "descriptionHtml": "A callback for when the user put focus on the picker\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "onIncrement",
          "typeTokens": [
            {
              "text": "("
            },
            {
              "text": "value"
            },
            {
              "text": ": string) => string | void"
            }
          ],
          "descriptionHtml": "This callback is triggered when the increment button is pressed or if the user presses up arrow with focus on the input of the spinButton\n\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "onValidate",
          "typeTokens": [
            {
              "text": "("
            },
            {
              "text": "value"
            },
            {
              "text": ": string, "
            },
            {
              "text": "event"
            },
            {
              "text": "?: "
            },
            {
              "text": "React"
            },
            {
              "text": "."
            },
            {
              "text": "SyntheticEvent"
            },
            {
              "text": "<"
            },
            {
              "text": "HTMLElement"
            },
            {
              "text": ">) => string | void"
            }
          ],
          "descriptionHtml": "This callback is triggered when the value inside the SpinButton should be validated.\n\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "precision",
          "typeTokens": [
            {
              "text": "number"
            }
          ],
          "descriptionHtml": "To how many decimal places the value should be rounded to. The default value is calculated based on the precision of step. IE: if step = 1, precision = 0. step = 0.0089, precision = 4. step = 300, precision = 2. step = 23.00, precision = 2.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "step",
          "typeTokens": [
            {
              "text": "number"
            }
          ],
          "descriptionHtml": "The difference between the two adjacent values of the SpinButton. This value is sued to calculate the precision of the input if no precision is given. The precision calculated this way will always be \\>= 0.\n\n",
          "deprecated": false,
          "defaultValue": "1"
        },
        {
          "name": "styles",
          "typeTokens": [
            {
              "text": "Partial"
            },
            {
              "text": "<"
            },
            {
              "text": "ISpinButtonStyles",
              "hyperlinkedPage": "SpinButton",
              "pageKind": "Components"
            },
            {
              "text": ">"
            }
          ],
          "descriptionHtml": "Custom styling for individual elements within the button DOM.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "theme",
          "typeTokens": [
            {
              "text": "ITheme",
              "hyperlinkedPage": "ITheme",
              "pageKind": "References"
            }
          ],
          "descriptionHtml": "Theme provided by HOC.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "title",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "A title for the SpinButton used for a more descriptive name that's also visible on its tooltip.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "upArrowButtonStyles",
          "typeTokens": [
            {
              "text": "Partial"
            },
            {
              "text": "<"
            },
            {
              "text": "IButtonStyles",
              "hyperlinkedPage": "Button",
              "pageKind": "Components"
            },
            {
              "text": ">"
            }
          ],
          "descriptionHtml": "Custom styles for the upArrow button.\n\nNote: The buttons are in a checked state when arrow keys are used to incremenent/decrement the spinButton. Use rootChecked instead of rootPressed for styling when that is the case.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "value",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "The value of the SpinButton. Use this if you intend to pass in a new value as a result of onChange events. This value is mutually exclusive to defaultValue. Use one or the other.\n",
          "deprecated": false,
          "defaultValue": ""
        }
      ]
    },
    {
      "kind": "interface",
      "name": "ISpinButtonStyles",
      "extendsTokens": [],
      "descriptionHtml": "\n",
      "members": [
        {
          "name": "arrowButtonsContainer",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Styles for the arrowButtonsContainer\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "arrowButtonsContainerDisabled",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style override for the arrowButtonsContainer when spin button is disabled.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "icon",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style for the icon.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "iconDisabled",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style for the icon.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "input",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Styles for the input.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "inputDisabled",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style override when spinButton is disabled.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "inputTextSelected",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style override for ::selection\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "label",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style for the label text\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "labelDisabled",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style for the label text\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "labelWrapper",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style for the label wrapper element of the component The label wrapper contains the icon and the label.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "labelWrapperBottom",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style override when the label is positioned at the bottom.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "labelWrapperEnd",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style override when the label is positioned at the end.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "labelWrapperStart",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style override when the label is positioned at the start.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "labelWrapperTop",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style override when the label is positioned at the top.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "root",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Styles for the root of the spin button component.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "spinButtonWrapper",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style for spinButtonWrapper when enabled.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "spinButtonWrapperDisabled",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style override when spinButton is disabled.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "spinButtonWrapperFocused",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style override when spinButton is enabled/focused.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "spinButtonWrapperHovered",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style override when spinButton is enabled/hovered.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "spinButtonWrapperTopBottom",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style override when label is positioned at the top/bottom.\n",
          "deprecated": false,
          "defaultValue": ""
        }
      ]
    }
  ]
}
