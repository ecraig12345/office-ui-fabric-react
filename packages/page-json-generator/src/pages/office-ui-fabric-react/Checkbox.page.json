{
  "tables": [
    {
      "kind": "interface",
      "name": "ICheckbox",
      "extendsTokens": [],
      "descriptionHtml": "Checkbox class interface. \n",
      "members": [
        {
          "name": "checked",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "Gets the current checked state.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "focus",
          "typeTokens": [
            {
              "text": "() => void"
            }
          ],
          "descriptionHtml": "Sets focus to the checkbox.\n",
          "deprecated": false,
          "defaultValue": ""
        }
      ]
    },
    {
      "kind": "interface",
      "name": "ICheckboxProps",
      "extendsTokens": [
        {
          "text": "React"
        },
        {
          "text": "."
        },
        {
          "text": "ButtonHTMLAttributes"
        },
        {
          "text": "<"
        },
        {
          "text": "HTMLElement"
        },
        {
          "text": " | "
        },
        {
          "text": "HTMLInputElement"
        },
        {
          "text": "> "
        }
      ],
      "descriptionHtml": "Checkbox properties. \n",
      "members": [
        {
          "name": "ariaDescribedBy",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "ID for element that provides extended information for the checkbox.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "ariaLabel",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "Accessible label for the checkbox.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "ariaLabelledBy",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "ID for element that contains label information for the checkbox.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "ariaPositionInSet",
          "typeTokens": [
            {
              "text": "number"
            }
          ],
          "descriptionHtml": "The position in the parent set (if in a set) for aria-posinset.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "ariaSetSize",
          "typeTokens": [
            {
              "text": "number"
            }
          ],
          "descriptionHtml": "The total size of the parent set (if in a set) for aria-setsize.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "boxSide",
          "typeTokens": [
            {
              "text": "'start' | 'end'"
            }
          ],
          "descriptionHtml": "Allows you to set the checkbox to be at the before (start) or after (end) the label.\n\n",
          "deprecated": false,
          "defaultValue": "'start'"
        },
        {
          "name": "checked",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "Checked state. Mutually exclusive to \"defaultChecked\". Use this if you control the checked state at a higher level and plan to pass in the correct value based on handling onChange events and re-rendering.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "checkmarkIconProps",
          "typeTokens": [
            {
              "text": "IIconProps",
              "hyperlinkedPage": "Icon",
              "pageKind": "Components"
            }
          ],
          "descriptionHtml": "Custom icon props for the check mark rendered by the checkbox\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "className",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "Additional class name to provide on the root element, in addition to the ms-Checkbox class.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "componentRef",
          "typeTokens": [
            {
              "text": "IRefObject"
            },
            {
              "text": "<"
            },
            {
              "text": "ICheckbox",
              "hyperlinkedPage": "Checkbox",
              "pageKind": "Components"
            },
            {
              "text": ">"
            }
          ],
          "descriptionHtml": "Optional callback to access the ICheckbox interface. Use this instead of ref for accessing the public methods and properties of the component.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "defaultChecked",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "Default checked state. Mutually exclusive to \"checked\". Use this if you want an uncontrolled component, and want the Checkbox instance to maintain its own state.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "disabled",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "Disabled state of the checkbox.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "inputProps",
          "typeTokens": [
            {
              "text": "React"
            },
            {
              "text": "."
            },
            {
              "text": "ButtonHTMLAttributes"
            },
            {
              "text": "<"
            },
            {
              "text": "HTMLElement"
            },
            {
              "text": " | "
            },
            {
              "text": "HTMLButtonElement"
            },
            {
              "text": ">"
            }
          ],
          "descriptionHtml": "Optional input props that will be mixed into the input element, *before* other props are applied. This allows you to extend the input element with additional attributes, such as data-automation-id needed for automation. Note that if you provide, for example, \"disabled\" as well as \"inputProps.disabled\", the former will take precedence over the later.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "keytipProps",
          "typeTokens": [
            {
              "text": "IKeytipProps",
              "hyperlinkedPage": "Keytip",
              "pageKind": "Components"
            }
          ],
          "descriptionHtml": "Optional keytip for this checkbox\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "label",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "Label to display next to the checkbox.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "onChange",
          "typeTokens": [
            {
              "text": "("
            },
            {
              "text": "ev"
            },
            {
              "text": "?: "
            },
            {
              "text": "React"
            },
            {
              "text": "."
            },
            {
              "text": "FormEvent"
            },
            {
              "text": "<"
            },
            {
              "text": "HTMLElement"
            },
            {
              "text": " | "
            },
            {
              "text": "HTMLInputElement"
            },
            {
              "text": ">, "
            },
            {
              "text": "checked"
            },
            {
              "text": "?: boolean) => void"
            }
          ],
          "descriptionHtml": "Callback that is called when the checked value has changed.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "onRenderLabel",
          "typeTokens": [
            {
              "text": "IRenderFunction"
            },
            {
              "text": "<"
            },
            {
              "text": "ICheckboxProps",
              "hyperlinkedPage": "Checkbox",
              "pageKind": "Components"
            },
            {
              "text": ">"
            }
          ],
          "descriptionHtml": "Custom render function for the label.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "styles",
          "typeTokens": [
            {
              "text": "IStyleFunctionOrObject"
            },
            {
              "text": "<"
            },
            {
              "text": "ICheckboxStyleProps",
              "hyperlinkedPage": "Checkbox",
              "pageKind": "Components"
            },
            {
              "text": ", "
            },
            {
              "text": "ICheckboxStyles",
              "hyperlinkedPage": "Checkbox",
              "pageKind": "Components"
            },
            {
              "text": ">"
            }
          ],
          "descriptionHtml": "Call to provide customized styling that will layer on top of the variant rules.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "theme",
          "typeTokens": [
            {
              "text": "ITheme",
              "hyperlinkedPage": "ITheme",
              "pageKind": "References"
            }
          ],
          "descriptionHtml": "Theme provided by HOC.\n",
          "deprecated": false,
          "defaultValue": ""
        }
      ]
    },
    {
      "kind": "interface",
      "name": "ICheckboxStyleProps",
      "extendsTokens": [],
      "descriptionHtml": "\n",
      "members": [
        {
          "name": "checked",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "",
          "deprecated": false
        },
        {
          "name": "className",
          "typeTokens": [
            {
              "text": "string"
            }
          ],
          "descriptionHtml": "",
          "deprecated": false
        },
        {
          "name": "disabled",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "",
          "deprecated": false
        },
        {
          "name": "isUsingCustomLabelRender",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "",
          "deprecated": false
        },
        {
          "name": "reversed",
          "typeTokens": [
            {
              "text": "boolean"
            }
          ],
          "descriptionHtml": "",
          "deprecated": false
        },
        {
          "name": "theme",
          "typeTokens": [
            {
              "text": "ITheme",
              "hyperlinkedPage": "ITheme",
              "pageKind": "References"
            }
          ],
          "descriptionHtml": "",
          "deprecated": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": "ICheckboxStyles",
      "extendsTokens": [],
      "descriptionHtml": "\n",
      "members": [
        {
          "name": "checkbox",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style for checkbox in its default unchecked/enabled state.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "checkmark",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style for the checkmark in the default enabled/unchecked state.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "input",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "INTERNAL: This is mostly an internal implementation detail which you should avoid styling. This refers to the <input type=\"checkbox\"> element that is typically hidden and not rendered on screen.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "label",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style for the label part (contains the customized checkbox + text) when enabled.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "root",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style for the root element (a button) of the checkbox component in the default enabled/unchecked state.\n",
          "deprecated": false,
          "defaultValue": ""
        },
        {
          "name": "text",
          "typeTokens": [
            {
              "text": "IStyle"
            }
          ],
          "descriptionHtml": "Style for text appearing with the checkbox in its default enabled state.\n",
          "deprecated": false,
          "defaultValue": ""
        }
      ]
    }
  ]
}
